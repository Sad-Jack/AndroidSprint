package lesson_10

fun main() {
    var counterWins = 0

    do {
        val computerNumber = rollDice()
        println("–ò–ò –±—Ä–æ—Å–∏–ª –∫—É–±–∏–∫: $computerNumber")
        val playerNumber = rollDice()
        println("–í—ã –±—Ä–æ—Å–∏–ª–∏ –∫—É–±–∏–∫: $playerNumber")

        if (chooseWinner(computerNumber, playerNumber)) {
            counterWins += 1
        }
        println()

        print("–•–æ—Ç–∏—Ç–µ –±—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏ –µ—â–µ —Ä–∞–∑? –í–≤–µ–¥–∏—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç': ")
        val input = readln()
        println()

        if (input.lowercase() != "–¥–∞") {
            println("–í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã. –î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!")
            break
        }
    } while (true)

    println("–í—ã–∏–≥—Ä—ã—à–Ω—ã–µ —á–∏—Å–ª–∞: $counterWins")
}

fun rollDice() = (1..6).random()

fun chooseWinner(computerNumber: Int, playerNumber: Int): Boolean {
    when {
        computerNumber < playerNumber -> {
            println("–ü–æ–±–µ–¥–∏–ª–æ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ üèÜ")
            return true
        }

        computerNumber > playerNumber -> {
            println("–ü–æ–±–µ–¥–∏–ª–∞ –º–∞—à–∏–Ω–∞ ü§ñ")
            return false
        }

        else -> {
            println("–ü–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞ ‚ú®")
            return false
        }
    }
}